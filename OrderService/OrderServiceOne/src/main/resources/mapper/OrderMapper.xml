<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.learn.order.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.zh.learn.order.entity.Order">
        <!--@mbg.generated-->
        <!--@Table `order`-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="money" jdbcType="DECIMAL" property="money"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, user_id, product_id, `count`, money, `status`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        SELECT
        <include refid="Base_Column_List"/>
        FROM `order`
        WHERE ID = #{id,jdbcType=BIGINT,javaType=LONG}
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.zh.learn.order.entity.Order">
        <!--@mbg.generated-->
        update `order`
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="count != null">
                `count` = #{count,jdbcType=INTEGER},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zh.learn.order.entity.Order">
        <!--@mbg.generated-->
        update `order`
        set user_id = #{userId,jdbcType=BIGINT},
        product_id = #{productId,jdbcType=BIGINT},
        `count` = #{count,jdbcType=INTEGER},
        money = #{money,jdbcType=DECIMAL},
        `status` = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <insert id="saveAll" timeout="1000" parameterType="list" keyProperty="id" keyColumn="id" flushCache="true">
        INSERT INTO `order`
         (user_id, product_id, count, money, status) VALUES
        <foreach collection="list" index="0" item="`order`"  separator=",">
           ( #{`order`.userId,jdbcType=BIGINT},#{`order`.productId,jdbcType=BIGINT},
            #{`order`.count,jdbcType=INTEGER},#{`order`.money,jdbcType=DECIMAL},#{`order`.status,jdbcType=INTEGER})
        </foreach>

    </insert>
    <delete id="deleteByIds" flushCache="true" statementType="PREPARED" parameterType="list" timeout="1000" >

        DELETE FROM  `order` WHERE id IN
            <foreach collection="list" separator="," open="(" close=")" item="id" index="0">
                #{id.value,jdbcType=BIGINT}
            </foreach>
    </delete>
</mapper>